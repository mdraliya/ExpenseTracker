@page "/d"
@using ExpenseTracker.Services
@inject AuthenticationStateService authStateService
@inject NavigationManager navigationManager
@inject ExpenseTracker.Services.TransactionService TransactionService

<div class="dashboard-container mt-5 ">
    <header class="dashboard-header">
        <span class="user-label">User</span>
        <div class="balance-container">
            <label for="balance" class="balance-label">Available balance:</label>
            <input type="text" id="balance" value="@(TransactionService.GetAvailableBalance())" readonly class="balance-input">
        </div>
    </header>

    <main>
        <div class="summary-cards">
            <div class="summary-card cash-inflow">
                <h2>Cash In Flow</h2>
                <p>@TransactionService.GetTotalCashInflow()</p>
            </div>
            <div class="summary-card cash-outflow">
                <h2>Cash Out Flow</h2>
                <p>@TransactionService.GetTotalCashOutflow()</p>
            </div>
            <div class="summary-card debt">
                <h2>Debt</h2>
                <p>@TransactionService.GetTotalDebt()</p>
            </div>
        </div>

        <h3 class="transactions-title">Top 5 Transactions</h3>
        <table class="transactions-table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Title</th>
                    <th>Amount</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var cashInflow in TransactionService.GetAllCashInflows().Take(5))
                {
                    <tr>
                        <td>@cashInflow.Date.ToShortDateString()</td>
                        <td>@cashInflow.Title</td>
                        <td>@cashInflow.Amount</td>
                    </tr>
                }
                @foreach (var cashOutflow in TransactionService.GetAllCashOutflows().Take(5))
                {
                    <tr>
                        <td>@cashOutflow.Date.ToShortDateString()</td>
                        <td>@cashOutflow.Title</td>
                        <td>@cashOutflow.Amount</td>
                    </tr>
                }
                @foreach (var debt in TransactionService.GetAllDebts().Take(5))
                {
                    <tr>
                        <td>@debt.Date.ToShortDateString()</td>
                        <td>@debt.Title</td>
                        <td>@debt.Amount</td>
                    </tr>
                }
            </tbody>
        </table>
    </main>
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        var user = authStateService.GetAuthenticatedUser();

        if (user == null)
        {
            navigationManager.NavigateTo("/d");
        }
    }
}
<style>
    .dashboard-container {
        max-width: 960px;
        margin: 20px auto;
        background-color: #ffffff;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        padding: 20px;
        font-family: Arial, sans-serif;
    }

    .dashboard-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    .user-label {
        font-size: 1.2rem;
        font-weight: bold;
    }

    .balance-container {
        display: flex;
        align-items: center;
    }

    .balance-label {
        font-weight: bold;
        margin-right: 10px;
    }

    .balance-input {
        background-color: #f3f4f6;
        border: 1px solid #d1d5db;
        padding: 8px 12px;
        border-radius: 4px;
        width: 100px;
        text-align: right;
        font-size: 0.9rem;
    }

    .summary-cards {
        display: flex;
        gap: 20px;
        margin-bottom: 30px;
    }

    .summary-card {
        flex: 1;
        background-color: #f9fafb;
        border: 1px solid #e5e7eb;
        border-radius: 8px;
        padding: 20px;
        text-align: center;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

        .summary-card h2 {
            font-size: 1.2rem;
            font-weight: bold;
            margin-bottom: 10px;
            color: #374151;
        }

        .summary-card p {
            font-size: 1.5rem;
            font-weight: bold;
            color: #1f2937;
        }

    .transactions-title {
        font-size: 1.2rem;
        font-weight: bold;
        margin-bottom: 15px;
        color: #374151;
    }

    .transactions-table {
        width: 100%;
        border-collapse: collapse;
        background-color: #ffffff;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
        overflow: hidden;
    }

        .transactions-table th,
        .transactions-table td {
            padding: 12px;
            border: 1px solid #e5e7eb;
            text-align: left;
            color: #374151;
        }

        .transactions-table th {
            background-color: #f3f4f6;
            font-weight: bold;
        }

        .transactions-table tr:hover {
            background-color: #f1f5f9;
        }

        .transactions-table td {
            font-size: 0.9rem;
        }

        .transactions-table tr:last-child td {
            border-bottom: none;
        }

</style>