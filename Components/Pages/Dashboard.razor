@page "/dashboard"
@using ExpenseTracker.Services
@inject AuthenticationStateService authStateService
@inject NavigationManager navigationManager
@inject TransactionService TransactionService

<div class="w-11/12 max-w-6xl mx-auto mt-5 bg-white rounded-lg shadow-lg p-6">
    <header class="flex justify-between items-center mb-6">
        <span class="text-lg font-semibold">User</span>
        <div class="flex items-center">
            <label for="balance" class="font-bold mr-2">Available balance:</label>
            <input type="text" id="balance" value="@(TransactionService.GetAvailableBalance())" readonly class="border-none bg-gray-100 p-2 rounded-md text-sm w-24">
        </div>
    </header>

    <main>
        <div class="flex justify-between mb-6">
            <div class="flex-1 bg-gray-100 p-6 text-center rounded-lg shadow-md mx-2">
                <h2 class="text-lg font-semibold mb-2">Cash In Flow</h2>
                <p class="text-2xl font-bold">@TransactionService.GetTotalCashInflow()</p>
            </div>
            <div class="flex-1 bg-gray-100 p-6 text-center rounded-lg shadow-md mx-2">
                <h2 class="text-lg font-semibold mb-2">Cash Out Flow</h2>
                <p class="text-2xl font-bold">@TransactionService.GetTotalCashOutflow()</p>
            </div>
            <div class="flex-1 bg-gray-100 p-6 text-center rounded-lg shadow-md mx-2">
                <h2 class="text-lg font-semibold mb-2">Debt</h2>
                <p class="text-2xl font-bold">@TransactionService.GetTotalDebt()</p>
            </div>
        </div>

        <div class="flex justify-between mb-6">
            <div class="flex-1 bg-gray-100 p-6 text-center rounded-lg shadow-md mx-2">
                <h2 class="text-lg font-semibold mb-2">Cleared Debt</h2>
                <p class="text-2xl font-bold">@TransactionService.GetClearedDebt()</p>
            </div>
            <div class="flex-1 bg-gray-100 p-6 text-center rounded-lg shadow-md mx-2">
                <h2 class="text-lg font-semibold mb-2">Remaining Debt</h2>
                <p class="text-2xl font-bold">@TransactionService.GetRemainingDebt()</p>
            </div>
        </div>

        <h3 class="text-lg font-semibold mb-4">Top 5 Transactions</h3>
        <table class="w-full border-collapse border border-gray-300">
            <thead>
                <tr>
                    <th class="p-3 border border-gray-300 bg-gray-200">Date</th>
                    <th class="p-3 border border-gray-300 bg-gray-200">Title</th>
                    <th class="p-3 border border-gray-300 bg-gray-200">Amount</th>
                    <th class="p-3 border border-gray-300 bg-gray-200">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var cashInflow in TransactionService.GetAllCashInflows().Take(5))
                {
                    <tr>
                        <td class="p-3 border border-gray-300">@cashInflow.Date.ToShortDateString()</td>
                        <td class="p-3 border border-gray-300">@cashInflow.Title</td>
                        <td class="p-3 border border-gray-300">@cashInflow.Amount</td>
                        <td class="p-3 border border-gray-300"></td> <!-- No action needed for Cash Inflows -->
                    </tr>
                }
                @foreach (var cashOutflow in TransactionService.GetAllCashOutflows().Take(5))
                {
                    <tr>
                        <td class="p-3 border border-gray-300">@cashOutflow.Date.ToShortDateString()</td>
                        <td class="p-3 border border-gray-300">@cashOutflow.Title</td>
                        <td class="p-3 border border-gray-300">@cashOutflow.Amount</td>
                        <td class="p-3 border border-gray-300"></td> <!-- No action needed for Cash Outflows -->
                    </tr>
                }
                @foreach (var debt in TransactionService.GetAllDebts().Take(5))
                {
                    <tr>
                        <td class="p-3 border border-gray-300">@debt.Date.ToShortDateString()</td>
                        <td class="p-3 border border-gray-300">@debt.Title</td>
                        <td class="p-3 border border-gray-300">@debt.Amount</td>
                        <td class="p-3 border border-gray-300">
                            @if (!debt.IsCleared)
                            {
                                <button @onclick="() => MarkDebtAsCleared(debt.Id)" class="bg-green-500 text-white p-2 rounded">Mark as Cleared</button>
                            }
                            else
                            {
                                <span class="text-green-500">Cleared</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </main>
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        var user = authStateService.GetAuthenticatedUser();

        if (user == null)
        {
            navigationManager.NavigateTo("/"); // Redirect to login if not authenticated
        }
    }

    private void MarkDebtAsCleared(int debtId)
    {
        TransactionService.MarkDebtAsCleared(debtId);
    }
}
