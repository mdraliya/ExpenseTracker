@page "/debt"
@inject ExpenseTracker.Services.TransactionService TransactionService
@using ExpenseTracker.Models

<div class="container">
    <div class="main-content">
        <div class="content-wrapper">
            <h1 class="title">Debt Management</h1>

            <div class="grid-container">
                <!-- Form Section -->
                <form class="form" @onsubmit="HandleSubmit">
                    <div class="form-group">
                        <label for="date">Date:</label>
                        <input type="date" id="date" name="date" @bind="DebtTransaction.Date">
                    </div>

                    <div class="form-group">
                        <label for="title">Title:</label>
                        <input type="text" id="title" name="title" @bind="DebtTransaction.Title">
                    </div>

                    <div class="form-group">
                        <label for="amount">Amount:</label>
                        <input type="number" id="amount" name="amount" @bind="DebtTransaction.Amount">
                    </div>

                    <div class="form-group">
                        <label for="source">Source:</label>
                        <textarea id="source" name="source" @bind="DebtTransaction.Source"></textarea>
                    </div>

                    <button type="submit" class="btn-primary">
                        Add Debt
                    </button>
                </form>

                <!-- Illustration -->
                <div class="illustration-container">
                    <img src="debt-illustration.png" alt="Debt Illustration" class="illustration">
                </div>
            </div>

            <!-- Table Section -->
            <div class="transactions-container">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Title</th>
                            <th>Amount</th>
                            <th>Source</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var debt in TransactionService.GetAllDebts())
                        {
                            <tr>
                                <td>@debt.Date.ToShortDateString()</td>
                                <td>@debt.Title</td>
                                <td>@debt.Amount</td>
                                <td>@debt.Source</td>
                                <td>
                                    <button class="btn-delete" @onclick="() => HandleDelete(debt.Id)">
                                        Delete
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@code {
    private ExpenseTracker.Models.Debt DebtTransaction = new ExpenseTracker.Models.Debt();

    private void HandleSubmit()
    {
        TransactionService.AddDebt(DebtTransaction);
        DebtTransaction = new ExpenseTracker.Models.Debt();
        StateHasChanged();
    }

    private void HandleDelete(int debtId)
    {
        var debt = TransactionService.GetAllDebts().FirstOrDefault(d => d.Id == debtId);
        if (debt != null)
        {
            TransactionService.DeleteDebt(debtId);
            TransactionService.UpdateAvailableBalance(debt.Amount);
        }
    }
}

<style>
    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
        font-family: Arial, sans-serif;
    }

    .main-content {
        display: flex;
        flex-direction: column;
        min-height: 100vh;
        background-color: #f9fafb;
    }

    .content-wrapper {
        background-color: #ffffff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .title {
        font-size: 24px;
        font-weight: bold;
        color: #333333;
        margin-bottom: 20px;
    }

    .grid-container {
        display: flex;
        gap: 20px;
        flex-wrap: wrap;
    }

    .form {
        flex: 1;
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .form-group {
        display: flex;
        flex-direction: column;
        gap: 5px;
    }

        .form-group label {
            font-size: 14px;
            font-weight: bold;
            color: #555555;
        }

        .form-group input, .form-group textarea {
            padding: 10px;
            border: 1px solid #cccccc;
            border-radius: 8px;
            font-size: 14px;
        }

    .btn-primary {
        padding: 12px;
        background-color: #4f46e5;
        color: white;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-size: 16px;
    }

        .btn-primary:hover {
            background-color: #4338ca;
        }

    .illustration-container {
        flex: 1;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .illustration {
        max-width: 100%;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .transactions-container {
        margin-top: 20px;
        overflow-x: auto;
    }

    .table {
        width: 100%;
        border-collapse: collapse;
    }

        .table th, .table td {
            border: 1px solid #dddddd;
            padding: 12px;
            text-align: left;
        }

        .table th {
            background-color: #4f46e5;
            color: white;
            font-weight: bold;
        }

        .table tr:hover {
            background-color: #f1f5f9;
        }

    .btn-delete {
        padding: 8px 12px;
        background-color: #dc2626;
        color: white;
        border: none;
        border-radius: 8px;
        cursor: pointer;
    }

        .btn-delete:hover {
            background-color: #b91c1c;
        }
</style>
