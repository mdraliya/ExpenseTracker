@page "/debt"
@inject ExpenseTracker.Services.TransactionService TransactionService
@using ExpenseTracker.Models

<div class="w-11/12 max-w-2xl bg-white p-6 rounded-lg shadow-md">
    <h1 class="text-center text-2xl font-bold mb-6">Debt</h1>

    <!-- Form Section -->
    <form class="grid gap-4 mb-6" @onsubmit="HandleSubmit">
        <div>
            <label for="date" class="block font-bold mb-2">Date:</label>
            <input type="date" id="date" name="date" @bind="DebtTransaction.Date" class="w-full p-2 border border-gray-300 rounded-md">
        </div>

        <div>
            <label for="title" class="block font-bold mb-2">Title:</label>
            <input type="text" id="title" name="title" placeholder="Enter title" @bind="DebtTransaction.Title" class="w-full p-2 border border-gray-300 rounded-md">
        </div>

        <div>
            <label for="amount" class="block font-bold mb-2">Amount:</label>
            <input type="number" id="amount" name="amount" placeholder="Enter amount" @bind="DebtTransaction.Amount" class="w-full p-2 border border-gray-300 rounded-md">
        </div>

        <div>
            <label for="source" class="block font-bold mb-2">Source:</label>
            <textarea id="source" name="source" placeholder="Enter Source" @bind="DebtTransaction.Source" class="w-full p-2 border border-gray-300 rounded-md"></textarea>
        </div>

        <button type="submit" class="w-full bg-gray-600 text-white py-2 rounded-md hover:bg-gray-700 transition-colors">
            Submit
        </button>
    </form>

    <!-- Table Section -->
    <div class="overflow-x-auto">
        <table class="w-full border-collapse border border-gray-200">
            <thead>
                <tr class="bg-gray-100">
                    <th class="border border-gray-300 p-2 text-left">Date</th>
                    <th class="border border-gray-300 p-2 text-left">Title</th>
                    <th class="border border-gray-300 p-2 text-left">Amount</th>
                    <th class="border border-gray-300 p-2 text-left">Source</th>
                    <th class="border border-gray-300 p-2 text-left">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var debt in TransactionService.GetAllDebts())
                {
                    <tr>
                        <td class="border border-gray-300 p-2">@debt.Date.ToShortDateString()</td>
                        <td class="border border-gray-300 p-2">@debt.Title</td>
                        <td class="border border-gray-300 p-2">@debt.Amount</td>
                        <td class="border border-gray-300 p-2">@debt.Source</td>
                        <td class="border border-gray-300 p-2">
                            <button class="bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600 transition" @onclick="() => HandleDelete(debt.Id)">
                                Delete
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private ExpenseTracker.Models.Debt DebtTransaction = new ExpenseTracker.Models.Debt(); // Initialize new DebtTransaction

    // Handle form submission
    private void HandleSubmit()
    {
        TransactionService.AddDebt(DebtTransaction); // Add the debt to the service
        DebtTransaction = new ExpenseTracker.Models.Debt(); // Reset the form
        StateHasChanged(); // Refresh the view
    }

    // Handle debt deletion
    private void HandleDelete(int debtId)
    {
        var debt = TransactionService.GetAllDebts().FirstOrDefault(d => d.Id == debtId);
        if (debt != null)
        {
            TransactionService.DeleteDebt(debtId); // Delete the debt entry
            TransactionService.UpdateAvailableBalance(debt.Amount); // Adjust the available balance
        }
    }
}
