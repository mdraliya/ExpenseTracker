@page "/cash-in"
@inject ExpenseTracker.Services.TransactionService TransactionService
@using ExpenseTracker.Models


<h1 class="text-center text-2xl font-bold mb-5">Cash Inflow</h1>

<form class="space-y-4 mb-5" @onsubmit="HandleSubmit">
    <div>
        <label for="date" class="block text-sm font-medium text-gray-700">Date:</label>
        <input type="date" id="date" @bind="Transaction.Date" class="mt-1 block w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" required>
    </div>

    <div>
        <label for="title" class="block text-sm font-medium text-gray-700">Title:</label>
        <input type="text" id="title" @bind="Transaction.Title" class="mt-1 block w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" required>
    </div>

    <div>
        <label for="amount" class="block text-sm font-medium text-gray-700">Amount:</label>
        <input type="number" id="amount" @bind="Transaction.Amount" class="mt-1 block w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" required>
    </div>

    <div>
        <label for="description" class="block text-sm font-medium text-gray-700">Description:</label>
        <textarea id="description" @bind="Transaction.Description" class="mt-1 block w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"></textarea>
    </div>

    <div class="mb-4">
        <label for="category">Category</label>
        <select id="category" @bind="Transaction.Category" class="ml-3">
            <option value="Salary">Salary</option>
            <option value="House Rent">House Rent</option>
            <option value="Interest">Interest</option>
            <option value="Funding">Funding</option>
            <option value="Taking out loan">Taking out loan</option>
            <option value="Revenue">Revenue</option>
        </select>
    </div>

    <button type="submit" class="w-full inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">Submit</button>
</form>

@if (!string.IsNullOrEmpty(FeedbackMessage))
{
    <div class="p-4 mt-2 text-green-800 bg-green-100 border border-green-300 rounded">
        @FeedbackMessage
    </div>
}


<div class="mt-5">
    <h2 class="text-xl font-bold mb-2">Transactions:</h2>
    <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
                <tr>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Title</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Amount</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Description</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Category</th>
                </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
                @foreach (var transaction in TransactionService.GetAllCashInflows())
                {
                        <tr>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@transaction.Date.ToShortDateString()</td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@transaction.Title</td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@transaction.Amount</td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@transaction.Description</td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@transaction.Category</td>
                        </tr>
                }
            </tbody>
        </table>
    </div>
</div>
@code {
    private CashInflow Transaction = new();
    private string FeedbackMessage = string.Empty;

    private async Task HandleSubmit()
    {
        try
        {
            TransactionService.AddCashInflow(Transaction); // Add transaction
            FeedbackMessage = "Transaction added successfully!"; // Set feedback
            Transaction = new CashInflow(); // Reset the form
        }
        catch (Exception ex)
        {
            FeedbackMessage = $"Error: {ex.Message}"; // Handle any errors
        }
        await InvokeAsync(StateHasChanged); // Refresh the view
    }
}

